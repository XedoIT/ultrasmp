on join:
    if {settings.%player%.damageindicator.players} is not set:
        set {settings.%player%.damageindicator.players} to true
    if {settings.%player%.damageindicator.players.info} is not set:
        set {settings.%player%.damageindicator.players.info} to "&aattivato"
    if {settings.%player%.damageindicator.mobs} is not set:
        set {settings.%player%.damageindicator.mobs} to true
    if {settings.%player%.damageindicator.mobs.info} is not set:
        set {settings.%player%.damageindicator.mobs.info} to "&aattivato"

options:
    animation_speed: 0.001

    wait: 20

    random_x_mob: -0.7 and 0.9
    random_y_mob: -0.7 and -0.8
    random_z_mob: -0.7 and 0.3
    random_x_player: -0.7 and 0.9
    random_y_player: -0.3 and -0.9
    random_z_player: -0.7 and 0.3

    lowest_damage: 1.99
    lowest_damage_color: &7
    low_damage: 2 and 4.99
    low_damage_color: &a
    medium_damage: 5 and 6.99
    medium_damage_color: &e
    high_damage: 7 and 9.99
    high_damage_color: &c
    critical_damage: 10
    critical_damage_color: &4
    

function DamageIndicatorPlayer(e: location, i: number, p: player):
    set {_x} to (random number between {@random_x_player})
    set {_y} to (random number between {@random_y_player})
    set {_z} to (random number between {@random_z_player})
    spawn (armor stand) at {_e} ~ vector({_x},{_y},{_z}):
        set (tag "Invisible" of nbt compound of entity) to true
        set (tag "NoGravity" of nbt compound of entity) to true
    set {_a} to (last spawned armor stand)
    if {_i} <= {@lowest_damage}:
        set (display name of {_a}) to "{@lowest_damage_color}%{_i}%"
    else if {_i} is between {@low_damage}:
        set (display name of {_a}) to "{@low_damage_color}%{_i}%"
    else if {_i} is between {@medium_damage}:
        set (display name of {_a}) to "{@medium_damage_color}%{_i}%"
    else if {_i} is between {@high_damage}:
        set (display name of {_a}) to "{@high_damage_color}%{_i}%"
    else if {_i} >= {@critical_damage}:
        set (display name of {_a}) to "{@critical_damage_color}%{_i}%"
    wait 1 tick
    if {settings.%{_p}%.damageindicator.players} is true:
        loop {@wait} times:
            teleport {_a} to (location of {_a} ~ vector(0,{@animation_speed},0))
            wait 1 tick
    else:
        wait {@wait} ticks
    delete ({_a}'s uuid parsed as entity)

function DamageIndicatorMobs(e: location, i: number, p: player):
    set {_x} to (random number between {@random_x_mob})
    set {_y} to (random number between {@random_y_mob})
    set {_z} to (random number between {@random_z_mob})
    spawn (armor stand) at {_e} ~ vector({_x},{_y},{_z}):
        set (tag "Invisible" of nbt compound of entity) to true
        set (tag "NoGravity" of nbt compound of entity) to true
    set {_a} to (last spawned armor stand)
    if {_i} <= {@lowest_damage}:
        set (display name of {_a}) to "{@lowest_damage_color}üó° +%{_i}%"
    else if {_i} is between {@low_damage}:
        set (display name of {_a}) to "{@low_damage_color}üó° +%{_i}%"
    else if {_i} is between {@medium_damage}:
        set (display name of {_a}) to "{@medium_damage_color}üó° +%{_i}%"
    else if {_i} is between {@high_damage}:
        set (display name of {_a}) to "{@high_damage_color}üó° +%{_i}%"
    else if {_i} >= {@critical_damage}:
        set (display name of {_a}) to "{@critical_damage_color}üó° +%{_i}%"
    wait 1 tick
    if {settings.%{_p}%.damageindicator.mobs} is true:
        loop {@wait} times:
            teleport {_a} to (location of {_a} ~ vector(0,{@animation_speed},0))
            wait 1 tick
    else:
        wait {@wait} ticks
    delete ({_a}'s uuid parsed as entity)

    
on damage:
    if victim is not a player:
        if attacker is a player:
            DamageIndicatorMobs((location of victim),damage,attacker)
    else:
        if {pvp} is true:
            if {god.%victim%} is not set:
                DamageIndicatorPlayer((location of victim),damage,attacker)
                if damage cause is projectile:
                    if gamemode of victim is survival or adventure:
                        if tool of attacker is a bow or a crossbow:
                            wait 1 tick
                            send "&8[&6üèπ&8] &c%victim% &aha &c%placeholder "aureliumskills_hp" from victim% ‚ù§" to attacker
                        else:
                            wait 1 tick
                            send "&8[&büî±&8] &c%victim% &aha &c%placeholder "aureliumskills_hp" from victim% ‚ù§" to attacker