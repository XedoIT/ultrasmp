#ScriptManager made by FireMan9534_TW | Discord: Fire_Man9534#4598 | plugin: skript
#(un)loading message not sending to players dont have permission
#save your tps

#settings
options:
  prefix: &8[&e&lSM&8]
  full prefix: &8[&e&lScriptManager&8]
  full name: &e&lScriptManager
  permission: script.manager
  permission message: &4[&6&lS&e&lM&6&lP&4] &cComando sconosciuto.
  v: 1.5
  
#not options like setting
options:
  i: inventory
  tg: metadata tag "scriptmanager::gui" of
  tg2: metadata tag "scriptmanager::mode" of
  ss: set slot
  sm: scriptmanager
  
on load:
  close {@i} for all players where [{@tg} player input is set]
  delete {@tg} all offline players
  delete {@tg2} all offline players
  delete {{@sm}::*}
  wait 1 tick
  if {{@sm}::load} = true:
    delete {{@sm}::load}
  else:
    set {_m} to "{@prefix} {@full name} &acaricato e pronto."
    send {_m} to all players where [player input have permission "{@permission}"]
    send {_m} to console
	
on unload:
  close {@i} for all players where [{@tg} player input is set]
  delete {@tg} all offline players
  delete {@tg2} all offline players
  delete {{@sm}::*}
  wait 1 tick
  if script is loaded:
    set {_m} to "{@prefix} {@full name} &aricaricato e pronto."
    set {{@sm}::load} to true
  else:
    set {_m} to "{@prefix} {@full name} &7disattivato."
  send {_m} to all players where [player input have permission "{@permission}"]
  send {_m} to console
  
command /{@sm} [<text>]:
  permission: {@permission}
  permission message: {@permission message}
  aliases: /scriptm, /smanager
  trigger:
    {@sm}_gui(player)
function scriptmanager_gui(p: player):
  set {_scripts::*} to all scripts where [input is not "%script%.sk" or "-%script%.sk"]
  if {@tg} {_p} is not set:
    close {@i} for {_p}
    set {@tg} {_p} to chest {@i} named "Script della Disagio SMP" with 6 rows
    set {_set} to false
    play sound "ui.toast.in" for {_p}
  delete {{@sm}::script::%{_p}%::*}
  loop {_scripts::*}:
    set {_t} to "%loop-value%"
    if {_t} start with "-":
      replace first "-" with "" in {_t}
    else if {_t} contains "/-":
      replace all "/-" with "/" in {_t}
    set {{@sm}::script::%{_p}%::%loop-index%} to subtext of {_t} from 1 to (length of {_t} - 3)
    set {{@sm}::script::%{_p}%::%loop-index%::f} to loop-value
  if {{@sm}::page::%{_p}%} is not set:
    set {{@sm}::page::%{_p}%} to 1
  set {_l} to (1 + (36 * ({{@sm}::page::%{_p}%} - 1)))
  if {{@sm}::script::%{_p}%::%{_l}%} is not set:
    set {{@sm}::page::%{_p}%} to 1
  set {_page} to {{@sm}::page::%{_p}%}
  loop 36 times:
    set {_l} to (loop-number + (36 * ({_page} - 1)))
    if {{@sm}::script::%{_p}%::%{_l}%} is set:
      set {_sn} to {{@sm}::script::%{_p}%::%{_l}%}
      if "%enabled scripts%" contains {{@sm}::script::%{_p}%::%{_l}%::f}:
        if {{@sm}::script::%{_p}%::%{_l}%} contains "/":
          replace all "/" with "&e&l/&a" in {_sn}
        {@ss} loop-number - 1 of {@tg} {_p} to lime terracotta with lore "&7Click sinistro per &aricaricare &7lo script" and "&7Click destro per &cdisattivare &7lo script" named "&a%{_sn}%"
      else if "%disabled scripts%" contains {{@sm}::script::%{_p}%::%{_l}%::f}:
        if {{@sm}::script::%{_p}%::%{_l}%} contains "/":
          replace all "/" with "&e&l/&c" in {_sn}
        {@ss} loop-number - 1 of {@tg} {_p} to red terracotta with lore "&7Click sinistro per &aabilitare &7lo script" named "&c%{_sn}%"
    else:
      {@ss} loop-number - 1 of {@tg} {_p} to air
  set {_e} to amount of ({_scripts::*} where [script input is loaded])
  set {_d} to amount of {_scripts::*} - {_e}
  {@ss} 45 of {@tg} {_p} to light green concrete with lore "&bClick sinistro per ricaricare tutti gli script" and "&aTasto centrale per abilitare tutti gli script" and "&cClick destro per disabilitare tutti gli script" named "&eTutti gli script"
  {@ss} 46 of {@tg} {_p} to red concrete with lore "&4&lATTENZIONE!" and "" and "&cAssicurati che il server ne sia in grado!" and "&7Aggiorna la lista degli script (nel caso avessi aggiunto/rimosso script)" named "&cRicarica tutti gli script"
  if {@tg2} {_p} is true:
    {@ss} 48 of {@tg} {_p} to orange stained glass pane with lore "&6Comandi Skript" and "" and "&7Clicca per modificare" named "&eT&6i&ep&6o"
  else:
    {@ss} 48 of {@tg} {_p} to yellow stained glass pane with lore "&eScriptManager" and "" and "&7Clicca per modificare" named "&6T&ei&6p&eo"
  {@ss} 49 of {@tg} {_p} to ender eye named "&aAggiorna"
  {@ss} 50 of {@tg} {_p} to writable book with lore " &bStato" and "  &6Script" and "   &aAbilitati&7: &b%{_e}%" and "   &cDisabilitati&7: &b%{_d}%" and "   &bScript Totali&7: &b%amount of {_scripts::*}%" and "  &eTPS&7: &e%tps from last 1 minute%, %tps from last 5 minutes%, %tps from last 15 minutes%" and "" and " &bVersione" and "  &aMinecraft&7: &b%minecraft version%" and "  &bBukkit&7: &b%bukkit version%" and "  &6Skript&7: &b%skript version%" named "&3Informazioni"
  {@ss} 51 of {@tg} {_p} to orange concrete named "&bRicarica {@full name}"
  {@ss} 52 of {@tg} {_p} to redstone block with lore "&7Per riabilitarlo nuovamente:" and "&7/skript enable %script%" named "&cDisabilita {@full name}"
  {@ss} 53 of {@tg} {_p} to arrow named "&cChiudi"
  if {_page} > 1:
    {@ss} 39 of {@tg} {_p} to spectral arrow with lore "&b%{_page} - 1%" named "&b<<< Pagina precedente"
  else:
    {@ss} 39 of {@tg} {_p} to air
  set {_c} to ( 1 + ({_page} * 36 ))
  if {{@sm}::script::%{_p}%::%{_c}%} is set:
    {@ss} 41 of {@tg} {_p} to spectral arrow with lore "&b%{_page} + 1%" named "&bPagina successiva >>>"
  else:
    {@ss} 41 of {@tg} {_p} to air
  {@ss} 40 of {@tg} {_p} to book with lore "&a%{_page}%" named "&bPagina"
  if {_set} = false:
    open {@tg} {_p} for {_p}
	
function scriptmanager_gui_click(p: player, s: number, c: number, cl: number):
  if {_s} <= 36:
    if {{@sm}::page::%{_p}%} > 1:
      set {_s} to {_s} + (36 * ({{@sm}::page::%{_p}%} - 1))
    if {{@sm}::script::%{_p}%::%{_s}%} is set:
      if {_cl} = 1:
        set {_time} to now
        play sound "block.stone_button.click_on" for {_p}
        if script {{@sm}::script::%{_p}%::%{_s}%} is loaded:
          send "{@prefix} &3Sto ricaricando &e%{{@sm}::script::%{_p}%::%{_s}%}%&b..." to {_p}
          if {@tg2} {_p} is not true:
            reload script {{@sm}::script::%{_p}%::%{_s}%}
          else:
            execute {_p} command "skript:skript reload %{{@sm}::script::%{_p}%::%{_s}%}%"
          set {_time} to difference between {_time} and now
          send "{@prefix} &aHo ricaricato &e%{{@sm}::script::%{_p}%::%{_s}%}% &7(%{_time}%&7)" to {_p}
          play sound "entity.experience_orb.pickup" for {_p}
        else:
          send "{@prefix} &3Sto abilitando &e%{{@sm}::script::%{_p}%::%{_s}%}%&b..." to {_p}
          if {@tg2} {_p} is not true:
            enable script {{@sm}::script::%{_p}%::%{_s}%}
          else:
            execute {_p} command "skript:skript enable %{{@sm}::script::%{_p}%::%{_s}%}%"
          set {_time} to difference between {_time} and now
          send "{@prefix} &aHo abilitato &b%{{@sm}::script::%{_p}%::%{_s}%}% &7(%{_time}%&7)" to {_p}
          play sound "entity.experience_orb.pickup" for {_p}
      else if {_cl} = 2 or 3:
        if script {{@sm}::script::%{_p}%::%{_s}%} is loaded:
          send "{@prefix} &3Sto disabilitando &e%{{@sm}::script::%{_p}%::%{_s}%}%&b..." to {_p}
          set {_time} to now
          if {@tg2} {_p} is not true:
            disable script {{@sm}::script::%{_p}%::%{_s}%}
          else:
            execute {_p} command "skript:skript disable %{{@sm}::script::%{_p}%::%{_s}%}%"
          set {_time} to difference between {_time} and now
          send "{@prefix} &cHo disabilitato &7%{{@sm}::script::%{_p}%::%{_s}%}% &7(%{_time}%&7)" to {_p}
          play sound "entity.experience_orb.pickup" for {_p}
    {@sm}_gui({_p})
  else if {_s} >= 37:
    if {_s} = 46:
      set {_time} to now
      if {_cl} = 1:
        send "{@prefix} &3Sto ricaricando tutti gli script abilitati..." to {_p}
        set {_a} to amount of ({{@sm}::script::%{_p}%::*} where [script input is loaded])
        if {@tg2} {_p} is not true:
          loop {{@sm}::script::%{_p}%::*} where [script input is loaded]:
            play sound "block.stone_button.click_on" for {_p}
            add 1 to {_aa}
            if {@tg} {_p} is set:
              {@sm}_gui({_p})
              set slot 45 of {@tg} {_p} to white glass pane with lore "&b%{_aa}%&7/&b%{_a}% &e%100 * {_aa} / {_a}%%%" named "&3Sto ricaricando tutti gli script abilitati..."
              wait 1 tick
            reload script "%loop-value%"
        else:
          loop {{@sm}::script::%{_p}%::*} where [script input is loaded]:
            play sound "block.stone_button.click_on" for {_p}
            add 1 to {_aa}
            if {@tg} {_p} is set:
              {@sm}_gui({_p})
              set slot 45 of {@tg} {_p} to white glass pane with lore "&b%{_aa}%&7/&b%{_a}% &e%100 * {_aa} / {_a}%%%" named "&3Sto ricaricando tutti gli script abilitati..."
              wait 1 tick
            execute {_p} command "skript:skript reload %loop-value%"
        set {_time} to difference between {_time} and now
        wait 1 tick
        send "{@prefix} &aHo ricaricato tutti gli script abilitati! &7(%{_time}%&7)" to {_p}
        play sound "entity.experience_orb.pickup" for {_p}
      else if {_cl} = 3:
        play sound "block.stone_button.click_on" for {_p}
        send "{@prefix} &3Sto abilitando tutti gli script disabilitati..." to {_p}
        set {_a} to amount of ({{@sm}::script::%{_p}%::*} where [script input is not loaded])
        if {@tg2} {_p} is not true:
          loop {{@sm}::script::%{_p}%::*} where [script input is not loaded]:
            play sound "block.stone_button.click_on" for {_p}
            add 1 to {_aa}
            if {@tg} {_p} is set:
              {@sm}_gui({_p})
              set slot 45 of {@tg} {_p} to white glass pane with lore "&b%{_aa}%&7/&b%{_a}% &e%100 * {_aa} / {_a}%%%" named "&3Sto abilitando tutti gli script disabilitati..."
              wait 1 tick
            enable script "%loop-value%"
        else:
          loop {{@sm}::script::%{_p}%::*} where [script input is not loaded]:
            play sound "block.stone_button.click_on" for {_p}
            add 1 to {_aa}
            if {@tg} {_p} is set:
              {@sm}_gui({_p})
              set slot 45 of {@tg} {_p} to white glass pane with lore "&b%{_aa}%&7/&b%{_a}% &e%100 * {_aa} / {_a}%%%" named "&3Sto abilitando tutti gli script disabilitati..."
              wait 1 tick
            execute {_p} command "skript:skript enable %loop-value%"
        set {_time} to difference between {_time} and now
        send "{@prefix} &aHo abilitato tutti gli script disabilitati! &7(%{_time}%&7)" to {_p}
        play sound "entity.experience_orb.pickup" for {_p}
      else if {_cl} = 2:
        play sound "block.stone_button.click_on" for {_p}
        send "{@prefix} &3Sto disabilitando tutti gli script abilitati..." to {_p}
        set {_a} to amount of ({{@sm}::script::%{_p}%::*} where [script input is loaded])
        if {@tg2} {_p} is not true:
          loop {{@sm}::script::%{_p}%::*} where [script input is loaded]:
            play sound "block.stone_button.click_on" for {_p}
            add 1 to {_aa}
            if {@tg} {_p} is set:
              {@sm}_gui({_p})
              set slot 45 of {@tg} {_p} to white glass pane with lore "&b%{_aa}%&7/&b%{_a}% &e%100 * {_aa} / {_a}%%%" named "&3Sto disabilitando tutti gli script abilitati..."
              wait 1 tick
            disable script "%loop-value%"
        else:
          loop {{@sm}::script::%{_p}%::*} where [script input is loaded]:
            play sound "block.stone_button.click_on" for {_p}
            add 1 to {_aa}
            if {@tg} {_p} is set:
              {@sm}_gui({_p})
              set slot 45 of {@tg} {_p} to white glass pane with lore "&b%{_aa}%&7/&b%{_a}% &e%100 * {_aa} / {_a}%%%" named "&3Sto disabilitando tutti gli script abilitati..."
              wait 1 tick
            execute {_p} command "skript:skript disable %loop-value%"
        set {_time} to difference between {_time} and now
        send "{@prefix} &cHo disabilitato tutti gli script abilitati! &7(%{_time}%&7)" to {_p}
        play sound "entity.experience_orb.pickup" for {_p}
      {@sm}_gui({_p})
    else if {_s} = 47:
      if line 1 of lore of slot 46 of {@tg} {_p} is "&c[&6&l!&c] &7&lNe sei proprio sicuro/a? &c[&6&l!&c]":
        play sound "block.stone_button.click_on" for {_p}
        send "{@prefix} &cSto ricaricando tutti gli script..." to {_p}
        set {_time} to now
        if {@tg2} {_p} is not true:
          execute console command "skript reload scripts"
        else:
          execute {_p} command "skript reload scripts"
        set {_time} to difference between {_time} and now
        send "{@prefix} &aHo ricaricato tutti gli script! &7(%{_time}%&7)" to {_p}
        execute {_p} command "skript:scriptmanager"
        play sound "entity.experience_orb.pickup" for {_p}
      else:
        set lore of slot 46 of {@tg} {_p} to "&c[&6&l!&c] &7&lNe sei proprio sicuro/a? &c[&6&l!&c]"
    else if {_s} = 53:
      if line 1 of lore of slot 52 of {@tg} {_p} is "&c[&6&l!&c] &7&lNe sei proprio sicuro/a? &c[&6&l!&c]":
        play sound "block.stone_button.click_on" for {_p}
        if {@tg2} {_p} is not true:
          disable script script
        else:
          execute {_p} command "skript:skript reload %script%"
        send "{@prefix} &7Ho disabilitato {@full name}&7, Per riabilitare nuovamente: /skript enable %script%" to {_p}
        play sound "entity.experience_orb.pickup" for {_p}
      else:
        set lore of slot 52 of {@tg} {_p} to "&c[&6&l!&c] &7&lNe sei proprio sicuro/a? &c[&6&l!&c]"
    else if {_s} = 52:
      if line 1 of lore of slot 51 of {@tg} {_p} is "&c[&6&l!&c] &7&lNe sei proprio sicuro/a? &c[&6&l!&c]":
        play sound "block.stone_button.click_on" for {_p}
        send "{@prefix} &3Sto ricaricando {@full name}&7... &7La GUI sarà aperta nuovamente dopo il reload." to {_p}
        if {@tg2} {_p} is not true:
          reload script script
        else:
          execute {_p} command "skript:skript reload %script%"
        execute {_p} command "skript:scriptmanager"
        play sound "entity.experience_orb.pickup" for {_p}
      else:
        set lore of slot 51 of {@tg} {_p} to "&c[&6&l!&c] &7&lNe sei proprio sicuro/a? &c[&6&l!&c]"
    else if {_s} = 54:
      close {@i} for {_p}
    else if {_s} = 49:
      if {@tg2} {_p} is true:
        delete {@tg2} {_p}
        play sound "block.piston.extend" for {_p}
      else:
        set {@tg2} {_p} to true
        play sound "block.piston.contract" for {_p}
      {@sm}_gui({_p})
    else if {_s} = 50:
      {@sm}_gui({_p})
      play sound "ui.toast.in" for {_p}
    else if {_s} = 42:
      if {{@sm}::page::%{_p}%} * 36 + 1 <= amount of {{@sm}::script::%{_p}%::*}:
        add 1 to {{@sm}::page::%{_p}%}
        {@sm}_gui({_p})
        play sound "ui.toast.in" for {_p}
    else if {_s} = 40:
      if {{@sm}::page::%{_p}%} > 1:
        remove 1 from {{@sm}::page::%{_p}%}
        {@sm}_gui({_p})
        play sound "ui.toast.in" for {_p}
on {@i} click:
  if {@tg} player is set:
    cancel event
    if event-{@i} is {@tg} player:
      if click type is left mouse button:
        set {_click} to 1
      else if click type is right mouse button:
        set {_click} to 2
      else if click type is middle mouse button:
        set {_click} to 3
      else:
        set {_click} to 1
      wait 1 tick
      {@sm}_gui_click(player, index of event-slot + 1, "%amount of {{@sm}::script::%player%::*}%" parsed as number, {_click})
on {@i} close:
  if event-{@i} is {@tg} player:
    delete {@tg} player
    delete {{@sm}::script::%player%::*}
    delete {{@sm}::page::%player%}
    delete {@tg2} player
    play sound "ui.toast.out" for player